1) Djanog framework
	1.models
	2.views
	3.templates
	4.forms

2) DRF  1.Сериализатор: преобразует информацию, хранящуюся в базе данных и определенную с помощью моделей Django, в формат, который легко и эффективно 		передается через API.

	2.Вид (ViewSet): определяет функции (чтение, создание, обновление, удаление), которые будут доступны через API.

	3.Маршрутизатор: определяет URL-адреса, которые будут предоставлять доступ к каждому виду.
	

3) Docker -- это программная платформа для быстрой разработки, тестирования и развертывания приложений. Docker упаковывает ПО в стандартизованные 		блоки, которые называются контейнерами. Каждый контейнер включает все необходимое для работы приложения: библиотеки, системные инструменты, 		код и среду исполнения. Благодаря Docker можно быстро развертывать и масштабировать приложения в любой среде и сохранять уверенность в том, 		что код будет работать.


4) GIT  1.git reset -- используется в основном для отмены изменений. Она изменяет указатель HEAD и, опционально, состояние индекса.
	2.git cherry-pick -- cherry-pick используется для того чтобы взять изменения, внесённые каким-либо коммитом, и попытаться применить их заново 		в виде нового коммита наверху текущей ветки. Это может оказаться полезным чтобы забрать парочку коммитов из другой ветки без полного слияния с 		той веткой.
	3.git rebase -- это "автоматизированный" cherry-pick. Он выполняет ту же работу, но для цепочки коммитов, тем самым как бы перенося ветку на 		новое место.
	4.git revert  -- полная противоположность git cherry-pick. Она создаёт "антикоммит" для указанного коммита, таким образом отменяя изменения, 		внесённые в нём.
	5.git stash -- Прятанье поглощает грязное состояние рабочего каталога, то есть изменённые отслеживаемые файлы и изменения в индексе, и 		сохраняет их в стек незавершённых изменений, которые вы потом в любое время можете снова применить.

5) HTML and CSS - out of hours
